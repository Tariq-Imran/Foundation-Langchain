## Langchain Setup guide: 

Setup guide from Langchain academy: https://academy.langchain.com/courses/take/intro-to-langgraph/texts/58238105-getting-set-up
Langchain academy github: https://github.com/langchain-ai/langchain-academy

Hereâ€™s our recommended setup to get started with the course. We'll be using the set of notebooks located here. If you prefer to download the notebooks manually, you can access a ZIP file here. Each module will also include links to the corresponding notebooks, with additional options to access them in Google Colab for a quick start.

#Python version

To get the most out of this course, please ensure you're using Python 3.11. This version is required for best compatibility with LangGraph. If you're on an older version, upgrading will ensure everything runs smoothly.

python3 --version
Clone repo

git clone https://github.com/langchain-ai/langchain-academy.git
$ cd langchain-academy
Create an environment and install dependencies

$ python3 -m venv lc-academy-env
$ source lc-academy-env/bin/activate
$ pip install -r requirements.txt
Running notebooks

If you don't have Jupyter set up, follow installation instructions here.

$ jupyter notebook
Sign up for LangSmith

Sign up here. You can reference LangSmith docs here.

Then, set

LANGSMITH_API_KEY="your-key"
LANGSMITH_TRACING_V2=true
LANGSMITH_PROJECT="langchain-academy"
in your environment.

Set up OpenAI API key

If you donâ€™t have an OpenAI API key, you can sign up here.

Then, set

OPENAI_API_KEY
in your environment.

Tavily for web search

Tavily Search API is a search engine optimized for LLMs and RAG, aimed at efficient, quick, and persistent search results. You can sign up for an API key here. Itâ€™s easy to sign up and offers a generous free tier. Some lessons in Module 4 will use Tavily.

Then, set

TAVILY_API_KEY
in your environment.

Set up LangGraph Studio

LangGraph Studio is a custom IDE for viewing and testing agents.
Studio can be run locally and opened in your browser on Mac, Windows, and Linux.
See documentation here on the local Studio development server and here.
Graphs for LangGraph Studio are in the module-x/studio/ folders.
To start the local development server, run the following command in your terminal in the /studio directory each module:
langgraph dev
You should see the following output:

- ðŸš€ API: http://127.0.0.1:2024
- ðŸŽ¨ Studio UI: https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024
- ðŸ“š API Docs: http://127.0.0.1:2024/docs
Open your browser and navigate to the Studio UI: https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024

To use Studio, you will need to create a .env file with the relevant API keys
Run this from the command line to create these files for module 1 to 6, as an example:
for i in {1..6}; do
  cp module-$i/studio/.env.example module-$i/studio/.env
  echo "OPENAI_API_KEY=\"$OPENAI_API_KEY\"" > module-$i/studio/.env
done
echo "TAVILY_API_KEY=\"$TAVILY_API_KEY\"" >> module-4/studio/.env
